@page "/malzeme_grupsec"

<div class="container">

    <MudTable Items="@items" FixedFooter="true" FixedHeader="true" Dense="true" Hover="true" Bordered="true" Striped="true" >
        <ToolBarContent>
            <MudText Typo="Typo.h6">Malzeme Grupları</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>#</MudTh>
            <MudTh>Kodu</MudTh>
            <MudTh>Adı</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" OnClick="(() => Sec(context.LOGICALREF,context.SPECODE,context.DEFINITION_))" />
            </MudTd>
            <MudTd DataLabel="Kodu">@context.SPECODE</MudTd>
            <MudTd DataLabel="Adı">@context.DEFINITION_</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="Sayfa başına kayıt sayısı" />
        </PagerContent>
    </MudTable>
</div>

@code
{
    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    public List<SpeCodesDto> items { get; set; }

    private bool _sortNameByLength;
    private bool loadingCompleted = false;


    protected override async Task OnInitializedAsync()
    {
        await LoadList();
    }

    private async Task LoadList()
    {
        var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

        // if (selectedFirmaDonem.firma_no.Value.ToString() == Consts.MakpaFirmaNo || selectedFirmaDonem.firma_no.Value.ToString() == Consts.GASTROMOREFirmaNo)
        // {
        //     var ondegerFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.OndegerFirmaDonem);
        //     if (ondegerFirmaDonem != null)
        //         selectedFirmaDonem = ondegerFirmaDonem;
        // }

        items = await httpClient.GetServiceResponseAsync<List<SpeCodesDto>>("/api/malzemekart/GetGrupList?logofirmno=" + selectedFirmaDonem.logo_firma.Value);
    }

    public async Task Sec(int logref, string kodu, string adi)
    {
        var res = new SpeCodesDto();
        res.LOGICALREF = logref;
        res.SPECODE = kodu;
        res.DEFINITION_ = adi;

        await ModalInstance.CloseAsync(ModalResult.Ok<SpeCodesDto>(res));
    }

}
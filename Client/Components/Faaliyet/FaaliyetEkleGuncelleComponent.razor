<EditForm Model="mainRecord">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (loadingCompleted == false)
    {
        <MudProgressLinear Color="Color.Primary" Striped="true" Size="Size.Large" Indeterminate="true" Class="my-7" />
    }

    <div class="mt-12">
        <div class="form">
            <div class="form-group">

                <div class="row">
                    <div class="col-md-3">
                        <label>Faaliyet Tarihi</label>
                        <InputDate @bind-Value="mainRecord.Tarih" class="form-control"></InputDate>
                    </div>
                    <div class="col-md-2">
                        <MudTimePicker Label="Faaliyet Saati" Editable="true" @bind-Time="mainRecord.FaaliyetSaati" />
                    </div>

                    <div class="col-md-2">
                        <label>Faaliyet Türü</label>
                        <InputSelect @bind-Value="mainRecord.Islemturu" class="form-control">
                            <option value="1">Gerçekleşen Faaliyet</option>
                            <option value="0">Planlanan Faaliyet</option>
                        </InputSelect>
                    </div>
                    <div class="col-md-3">
                        <label>Konu</label>
                        <InputSelect @bind-Value=@Konu class="form-control">
                            @if (KonuListesi != null)
                            {
                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                @foreach (var item in KonuListesi)
                                {
                                    <option value="@item.Adi">@item.Adi</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-2">
                        <label>Faaliyet Sayısı</label>
                        <InputNumber @bind-Value="mainRecord.IslemSayisi" class="form-control" placeholder="Faaliyet Sayısı" disabled />
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-2">
                        <label>Cari Kodu</label>
                        <InputText @bind-Value="mainRecord.Carikodu" class="form-control" placeholder="Cari Kodu" disabled />
                    </div>
                    <div class="col-md-4">
                        <label>Cari Adı</label>
                        <InputText @bind-Value="mainRecord.Cariadi" class="form-control" placeholder="Cari Adı" disabled />
                    </div>
                    <div class="col-md-4">
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FindInPage" OnClick="CariListesiAc" Color="Color.Info" Size=Size.Medium>Bul</MudButton>
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.AddCard" OnClick="YeniCariEkle" Color="Color.Info" Size=Size.Medium>Yeni Cari</MudButton>
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PersonAdd" OnClick="YeniKisiEkle" Color="Color.Info" Size=Size.Medium>Yeni Kişi</MudButton>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        <MudSimpleTable Dense="true" Hover="false" Bordered="false" Striped="false" Style="overflow-x: auto;">
                            <tbody>
                                <tr>
                                    <td>İlgili Kişi 1</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Kisiref" class="form-control">
                                            @if (KisiListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in KisiListesi)
                                                {
                                                    <option value="@item.Logref">@item.Tamadi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>İlgili Kişi 2</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Kisiref2" class="form-control">
                                            @if (KisiListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in KisiListesi)
                                                {
                                                    <option value="@item.Logref">@item.Tamadi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>İlgili Kişi 3</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Kisiref3" class="form-control">
                                            @if (KisiListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in KisiListesi)
                                                {
                                                    <option value="@item.Logref">@item.Tamadi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>İlgili Kişi 4</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Kisiref4" class="form-control">
                                            @if (KisiListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in KisiListesi)
                                                {
                                                    <option value="@item.Logref">@item.Tamadi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>İlgili Kişi 5</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Kisiref5" class="form-control">
                                            @if (KisiListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in KisiListesi)
                                                {
                                                    <option value="@item.Logref">@item.Tamadi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                            </tbody>
                        </MudSimpleTable>
                    </div>
                    <div class="col-md-4">
                        <MudSimpleTable Dense="true" Hover="false" Bordered="false" Striped="false" Style="overflow-x: auto;">
                            <tbody>
                                <tr>
                                    <td>Ürün Grubu 1</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Grup1" class="form-control">
                                            @if (UrunGrubuListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in UrunGrubuListesi)
                                                {
                                                    <option value="@item.Adi">@item.Adi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Ürün Grubu 2</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Grup2" class="form-control">
                                            @if (UrunGrubuListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in UrunGrubuListesi)
                                                {
                                                    <option value="@item.Adi">@item.Adi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Ürün Grubu 3</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Grup3" class="form-control">
                                            @if (UrunGrubuListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in UrunGrubuListesi)
                                                {
                                                    <option value="@item.Adi">@item.Adi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Ürün Grubu 4</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Grup4" class="form-control">
                                            @if (UrunGrubuListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in UrunGrubuListesi)
                                                {
                                                    <option value="@item.Adi">@item.Adi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Ürün Grubu 5</td>
                                    <td>
                                        <InputSelect @bind-Value="mainRecord.Grup5" class="form-control">
                                            @if (UrunGrubuListesi != null)
                                            {
                                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                                @foreach (var item in UrunGrubuListesi)
                                                {
                                                    <option value="@item.Adi">@item.Adi</option>
                                                }
                                            }
                                        </InputSelect>
                                    </td>
                                </tr>
                            </tbody>
                        </MudSimpleTable>
                    </div>
                </div>
            </div>
    
            <div class="form-group">
                <div class="row">
                    <div class="col-md-8">
                        <label>Açıklama</label>
                        <InputTextArea @bind-Value="mainRecord.Yapilanlar" class="form-control" rows="5"></InputTextArea>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-5">
                <div class="row">
                    <div class="col">
                        <MudButton Disabled="@_processing" OnClick="ValidSubmit" Variant="Variant.Filled" Color="Color.Primary">
                            @if (_processing)
                            {
                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                <MudText Class="ms-2">Kaydediliyor...</MudText>
                            }
                            else
                            {
                                <MudText>Kaydet</MudText>
                            }
                        </MudButton>
                        <CancelButtonComponent Caption="Vazgeç" OnClick="Vazgec" />
                    </div>

                    <div class="col">
                        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                            <MudButton StartIcon="@Icons.Material.Filled.AccessAlarm" IconColor="Color.Warning"
                                       OnClick="(() => YeniTakvimEkle())" Title="Randevu Oluşturun">Randevu</MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Task" IconColor="Color.Warning" Title="Görev Oluşturun" OnClick="(() => YeniVazifeEkle(2))">
                                Görev
                            </MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.PhoneAndroid" IconColor="Color.Warning" Title="Arama Oluştur" OnClick="(() => YeniVazifeEkle(3))">Arama</MudButton>
                        </MudButtonGroup>
                    </div>
                </div>
            </div>

        </div>
        
        
    </div>

</EditForm>

@code {
    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Inject]
    ISnackbar Snackbar { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    [Inject]
    YetkiHelper yetkiHelper { get; set; }

    [Inject]
    FaaliyetHelper mainDataHelper { get; set; }

    [Parameter]
    public int? logRef { get; set; }

    [Parameter]
    public EventCallback OnVazgecClicked { get; set; }

    public bool IsUpdate { get; set; }
    private bool loadingCompleted = false;
    private bool _processing = false;
    private string listPage = "faaliyet_listef";
    private string tableName = "faaliyet";

    FaaliyetDto mainRecord = new FaaliyetDto();

    public List<SisSabitlerDetayDto> UrunGrubuListesi { get; set; }
    public List<SisSabitlerDetayDto> KonuListesi { get; set; }
    public List<KisilerDto> KisiListesi { get; set; }

    private string _konu = "";
    public string Konu
    {
        get
        {
            return mainRecord.Konu;
        }
        set
        {
            _konu = value;
            mainRecord.Konu = _konu;

            CariFaaliyetSayisiGetir().GetAwaiter();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        IsUpdate = logRef.HasValue;

        if (IsUpdate)
            await GetRecord();
        else
            await NewRecord();

        await GetKonuListesi();
        await GetUrunGrubuListesi();
        await GetKisiListesi();
        loadingCompleted = true;
    }

    public async Task GetRecord()
    {
        if (logRef.HasValue == false)
            return;

        try
        {
            this.mainRecord = await mainDataHelper.LoadRecord(this.logRef.Value);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
    }

    public async Task NewRecord()
    {
        mainRecord.Tarih = DateTime.Now;
        mainRecord.FaaliyetSaati = mainRecord.Tarih.Value.GetTime();
        mainRecord.Islemturu = 1;
    }

    public async Task ValidSubmit()
    {
        if (IsUpdate)
            await UpdateRecord();
        else
            await SaveRecord();
    }

    public async Task CariListesiAc()
    {
        var opt = new ModalOptions();
        
        var cariForm = modal.Show<Pages.Cari.Cari_Sec>("Cari Seç", opt);
        var result = await cariForm.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                var cariSecim = (VCariKartDto)result.Data;
                mainRecord.Cariadi = cariSecim.Adi;
                mainRecord.Carikodu = cariSecim.Kodu;
                mainRecord.Cariref = cariSecim.Logref;
                await GetKisiListesi();
                await CariFaaliyetSayisiGetir();
            }
        }
    }

    public async Task YeniCariEkle()
    {
        var opt = new ModalOptions();
        
        var parameters = new ModalParameters();
        parameters.Add("modalForm", 1);

        var cariForm = modal.Show<CariKartEkleGuncelleComponent>("Yeni Cari Ekle", parameters: parameters, options: opt);
        var result = await cariForm.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                var cariSecim = (CariKartDto)result.Data;
                mainRecord.Cariadi = cariSecim.Adi;
                mainRecord.Carikodu = cariSecim.Kodu;
                mainRecord.Cariref = cariSecim.Logref;
                KisiListesi = new List<KisilerDto>();
                if (mainRecord.Islemturu == 1)
                    mainRecord.IslemSayisi = 1;
            }
        }
    }

    public async Task YeniKisiEkle()
    {
        if (!mainRecord.Cariref.HasValue)
            return;

        var opt = new ModalOptions();
        
        var parameters = new ModalParameters();
        parameters.Add("modalForm", 1);
        parameters.Add("CariKartRef", mainRecord.Cariref);

        var cariForm = modal.Show<CariKartKisiEkleGuncelleComponent>("Yeni Kişi Ekle", parameters: parameters, options: opt);
        var result = await cariForm.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                var Secim = (KisilerDto)result.Data;
                KisiListesi.Add(Secim);
            }

        }
    }

    private async Task UpdateRecord()
    {
        try
        {
            SubmitValidation();
        }
        catch (ClientException ex)
        {
            foreach (var item in ex.ErrorList)
            {
                Snackbar.Add(item, severity: Severity.Warning);
            }
            return;
        }
        catch (Exception)
        {
        }

        try
        {
            _processing = true;

            await mainDataHelper.UpdateRecord(mainRecord);

            navigation.NavigateTo("/" + listPage);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
        finally
        {
            _processing = false;
        }
    }

    private async Task SaveRecord()
    {
        try
        {
            SubmitValidation();
        }
        catch (ClientException ex)
        {
            foreach (var item in ex.ErrorList)
            {
                Snackbar.Add(item, severity: Severity.Warning);
            }
            return;
        }
        catch (Exception)
        {
        }

        try
        {
            _processing = true;

            mainRecord.Logref = await yetkiHelper.RefNoAl(tableName);
            await mainDataHelper.SaveRecord(mainRecord);

            navigation.NavigateTo("/" + listPage);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
        finally
        {
            _processing = false;
        }
    }

    public async Task Vazgec()
    {
        await OnVazgecClicked.InvokeAsync();
    }

    public void SubmitValidation()
    {
        var err = new List<string>();

        if (!mainRecord.Cariref.HasValue)
            err.Add("Cari Hesap boş geçilemez");

        if (!mainRecord.Kisiref.HasValue)
            err.Add("Firma yetkilisi boş geçilemez");

        if (!mainRecord.Islemturu.HasValue)
            err.Add("Faaliyet türü boş geçilemez");

        if (string.IsNullOrWhiteSpace(mainRecord.Konu))
            err.Add("Faaliyet konusu boş geçilemez");

        if (err.Count > 0)
        {
            var ex = new ClientException("Kayıt Hatası");
            ex.ErrorList = err;

            throw ex;
        }
    }

    public async Task GetKonuListesi()
    {
        try
        {
            var result = await httpClient.GetServiceResponseAsync<List<SisSabitlerDetayDto>>("/api/helper/GetSabitDetayList?tip=20");
            if (result != null)
            {
                KonuListesi = result;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
    }

    public async Task GetUrunGrubuListesi()
    {
        try
        {
            var result = await httpClient.GetServiceResponseAsync<List<SisSabitlerDetayDto>>("/api/helper/GetSabitDetayList?tip=21");
            if (result != null)
            {
                UrunGrubuListesi = result;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
    }

    public async Task GetKisiListesi()
    {
        try
        {
            if (mainRecord.Cariref.HasValue == false)
                return;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            var result = await httpClient.GetServiceResponseAsync<List<KisilerDto>>(UrlHelper.CariKartKisiGetir + "?cariref=" + mainRecord.Cariref + "&firmaId=" + selectedFirmaDonem.firma_no);
            if (result != null)
            {
                KisiListesi = result;
            }
        }
        catch (Exception)
        {

            throw;
        }
    }

    public async Task MalzemeListesiAc()
    {
        var opt = new ModalOptions();
        
        var form = modal.Show<Pages.Malzeme.Malzeme_Sec>("Malzeme Seç", options: opt);
        var result = await form.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                var mkart = (MalzemeKartDto)result.Data;
                mainRecord.Malzemeref = mkart.Logref;
                mainRecord.Malzemeadi = mkart.Adi;
                mainRecord.Malzemekodu = mkart.Kodu;
            }
            else
            {
            }
        }
    }

    public async Task CariFaaliyetSayisiGetir()
    {
        try
        {
            if (!mainRecord.Cariref.HasValue || mainRecord.Konu == null || mainRecord.Islemturu != 1)
                return;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            if (selectedFirmaDonem == null)
                throw new Exception("Firma Dönem Seçili değil");

            var request = new FaaliyetRequestDto();
            request.kullanicikodu = await LocalStorageService.GetItemAsync<string>(Consts.KullaniciKodu); ;
            request.FirmaId = selectedFirmaDonem.firma_no.Value;
            request.Faaliyet = mainRecord;

            var result = await httpClient.PostGetServiceResponseAsync<int, FaaliyetRequestDto>(UrlHelper.CariFaaliyetSayisi, request);

            mainRecord.IslemSayisi = result;

            this.StateHasChanged();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
    }

    public async Task YeniVazifeEkle(int vazifeTipi)
    {

        var opt = new ModalOptions();
        
        var parameters = new ModalParameters();
        parameters.Add("modalForm", 1);
        parameters.Add("vazifeTipi", vazifeTipi);

        var vzf = new VazifeDto();
        vzf.CariRef = this.mainRecord.Cariref;
        vzf.CariKodu = this.mainRecord.Carikodu;
        vzf.CariAdi = this.mainRecord.Cariadi;

        parameters.Add("gorevParam", vzf);

        var cariForm = modal.Show<Pages.Vazife.Vazife_Ekle_Guncelle>("Yeni Görev", parameters: parameters, options: opt);
        var result = await cariForm.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
            }

        }
    }

    public async Task YeniTakvimEkle()
    {

        var opt = new ModalOptions();
        
        var parameters = new ModalParameters();
        parameters.Add("modalForm", 1);

        var gt = new TakvimDto();
        gt.Cari_Kodu = this.mainRecord.Carikodu;
        gt.CariRef = this.mainRecord.Cariref;
        gt.Cari_Adi = this.mainRecord.Cariadi;
        gt.Saat = this.mainRecord.FaaliyetSaati;

        parameters.Add("GorevTakvimi", gt);

        
    }

}


<EditForm Model="teklifDetay">
    <DataAnnotationsValidator />

    @if (loadingCompleted == false)
    {
        <MudProgressLinear Color="Color.Primary" Striped="true" Size="Size.Large" Indeterminate="true" Class="my-7" />
    }

    <div class="mt-12">

        <div class="form">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <h5><span style="color:navy">Teklif Numarası :</span> @teklif.Teklifno <span style="color:navy">Müşteri :</span> @teklif.Cariadi</h5>
                    </div>

                </div>
            </div>

            <MudTabs Elevation="2" Rounded="true" Centered="false" Class="my-6">

                <hr />
                <MudTabPanel Icon="@Icons.Material.Filled.AddTask" Text="Malzeme" BadgeColor="Color.Error">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                <label>Çizim Kodu</label>
                                <InputText @bind-Value="teklifDetay.Cizimkodu" class="form-control" placeholder="Çizim Kodu" />
                            </div>
                            <div class="col-md-2">
                                <label>Poz No</label>
                                <InputText @bind-Value="teklifDetay.Sipnosira" class="form-control" placeholder="Poz no" />
                            </div>
                            <div class="col-md-2">
                                <label>Mahal</label>
                                <InputText @bind-Value="teklifDetay.Mahal" class="form-control" placeholder="Mahal" />
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                <label>Malzeme Kodu</label>
                                <InputText @bind-Value="teklifDetay.Malzkodu" class="form-control" placeholder="Stok Kodu" disabled />
                            </div>
                            <div class="col-md-4">
                                <label>Malzeme Tanımı</label>
                                <InputText @bind-Value="teklifDetay.Malzadi" class="form-control" placeholder="Stok Adı" disabled />
                            </div>
                            <div class="col-md-6">
                                <label>&nbsp;</label>
                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FindInPage"
                                           OnClick="MalzemeListesiAc"
                                           Color="Color.Info" Size="Size.Medium">Bul</MudButton>

                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Storefront"
                                           OnClick="MalzemeEkle"
                                           Color="Color.Secondary" Size="Size.Medium">Yeni Malzeme</MudButton>


                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-3">
                                <label>Marka</label>
                                <InputText @bind-Value="teklifDetay.Marka" class="form-control" placeholder="Marka" disabled />
                            </div>
                            <div class="col-md-3">
                                <label>Menşei</label>
                                <InputText @bind-Value="teklifDetay.Mensei" class="form-control" placeholder="Menşei" disabled />
                            </div>
                            <div class="col-md-3">
                                <label>Ebat</label>
                                <InputText @bind-Value="teklifDetay.Ebat" class="form-control" placeholder="Ebat" disabled />
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">
                                <label>Miktar</label>
                                <InputNumber @bind-Value="pageMiktar" class="form-control" placeholder="Miktar" />
                            </div>
                            <div class="col-md-1">
                                <label>Birim</label>
                                <InputText @bind-Value="teklifDetay.Birimkodu" class="form-control" placeholder="Birim" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>Liste Fiyatı</label>
                                <InputNumber @bind-Value="teklifDetay.Fiyat" class="form-control" placeholder="Liste Fiyatı" disabled />
                            </div>
                            <div class="col-md-1">
                                <label>Döviz</label>
                                <InputSelect @bind-Value="DovizTuruBilgisi" class="form-control">
                                    <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                    @if (DovizListesi != null)
                                    {
                                        @foreach (var item in DovizListesi)
                                        {
                                            <option value="@item.CURTYPE">@item.CURCODE</option>
                                        }
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-1">
                                <label>Kur</label>
                                <InputNumber @bind-Value="teklifDetay.Dovizkuru" class="form-control" placeholder="@_DovizKuruState" />
                            </div>
                            <div class="col-md-2">
                                <label>Tutar</label>
                                <InputNumber @bind-Value="teklifDetay.Tutar" class="form-control" placeholder="Tutar" disabled />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-1">
                                <label>İsk-1 %</label>
                                <InputNumber @bind-Value="pageIskYuz1" class="form-control" />
                            </div>
                            <div class="col-md-1">
                                <label>İsk-2 %</label>
                                <InputNumber @bind-Value="pageIskYuz2" class="form-control" />
                            </div>
                            <div class="col-md-1">
                                <label>İsk-3 %</label>
                                <InputNumber @bind-Value="pageIskYuz3" class="form-control" />
                            </div>
                            <div class="col-md-1">
                                <label>İsk-G %</label>
                                <InputNumber @bind-Value="teklifDetay.Iskyuz4" class="form-control" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>Net Fiyat İD</label>
                                <InputNumber @bind-Value="BirimFiyatNetid" class="form-control" placeholder="Net Fiyat İD" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>Net Toplam İD</label>
                                <InputNumber @bind-Value="teklifDetay.Kdvmatrahid" class="form-control" placeholder="Toplam Tutar İD" disabled />
                            </div>
                        </div>
                    </div>


                    @if (@maliyetGorYonetici || maliyetGorSatisci)
                    {
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-2">
                                    @if (@maliyetGorYonetici)
                                    {
                                        <label>Maliyet 1 Fiyat İD</label>
                                        <InputNumber @bind-Value="teklifDetay.Maliyet1id" class="form-control" disabled />
                                    }
                                </div>
                                <div class="col-md-2">
                                    @if (@maliyetGorSatisci)
                                    {
                                        <label>Maliyet 2 Fiyat İD</label>
                                        <InputNumber @bind-Value="teklifDetay.Maliyet2id" class="form-control" disabled />
                                    }
                                </div>
                                <div class="col-md-2">
                                    @if (@maliyetGorYonetici)
                                    {
                                        <label>Maliyet 1 Tutar İD</label>
                                        <InputNumber @bind-Value="Maliyet1Topid" class="form-control" disabled />
                                    }
                                </div>
                                <div class="col-md-2">
                                    @if (@maliyetGorSatisci)
                                    {
                                        <label>Maliyet 2 Tutar İD</label>
                                        <InputNumber @bind-Value="Maliyet2Topid" class="form-control" disabled />
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-8">
                                <label>Açıklama</label>
                                <InputText @bind-Value="teklifDetay.Aciklama" class="form-control" placeholder="Açıklama" />
                            </div>
                        </div>
                    </div>

                </MudTabPanel>
                <MudTabPanel Icon="@Icons.Material.Filled.Percent" Text="İskonto" BadgeColor="Color.Success">
                    <hr />
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                <label>İsk-1 Tutar İD</label>
                                <InputNumber @bind-Value="teklifDetay.Isktut1id" class="form-control" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>İsk-2 Tutar İD</label>
                                <InputNumber @bind-Value="teklifDetay.Isktut2id" class="form-control" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>İsk-3 Tutar İD</label>
                                <InputNumber @bind-Value="teklifDetay.Isktut3id" class="form-control" disabled />
                            </div>
                            <div class="col-md-2">
                                <label>İsk-Genel Tutar İD</label>
                                <InputNumber @bind-Value="teklifDetay.Isktut4id" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                @if (@maliyetGorYonetici)
                                {
                                    <label>Maliyet 1</label>
                                    <InputNumber @bind-Value="teklifDetay.Maliyet1" class="form-control" disabled />
                                }
                                </div>
                            <div class="col-md-2">
                                @if (maliyetGorSatisci)
                                {
                                    <label>Maliyet 2</label>
                                    <InputNumber @bind-Value="teklifDetay.Maliyet2" class="form-control" disabled />
                                }
                            </div>
                        </div>
                    </div>
                </MudTabPanel>
                <hr />
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            <label>Toplam Tutar İD</label>
                            <InputNumber @bind-Value="teklifDetay.Tutarid" class="form-control" disabled />
                        </div>
                        <div class="col-md-2">
                            <label>Iskonto Toplam İD</label>
                            <InputNumber @bind-Value="IskTopid" class="form-control" disabled />
                        </div>
                        <div class="col-md-2">
                            <label>KDV Mahrahı İD</label>
                            <InputNumber @bind-Value="teklifDetay.Kdvmatrahid" class="form-control" disabled />
                        </div>
                        <div class="col-md-1">
                            <label>KDV %</label>
                            <InputNumber @bind-Value="teklifDetay.Kdvyuz" class="form-control" disabled />
                        </div>
                        <div class="col-md-2">
                            <label>KDV Tutarı İD</label>
                            <InputNumber @bind-Value="teklifDetay.Kdvtutid" class="form-control" disabled />
                        </div>
                        <div class="col-md-2">
                            <label>Net Tutar İD</label>
                            <InputNumber @bind-Value="teklifDetay.Nettutarid" class="form-control" disabled />
                        </div>
                    </div>
                </div>
            </MudTabs>

        </div>
    </div>


    <div class="form-group">
        <MudButton Disabled="@_processing" OnClick="ValidSubmit" Variant="Variant.Filled" Color="Color.Primary">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Kaydediliyor...</MudText>
            }
            else
            {
                <MudText>Kaydet</MudText>
            }
        </MudButton>
        <CancelButtonComponent Caption="Vazgeç" OnClick="Vazgec" />
    </div>

</EditForm>

@code {

    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [CascadingParameter] ModalParameters modalParameters { get; set; }

    [Inject]
    ISnackbar Snackbar { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    [Inject]
    YetkiHelper yetkiHelper { get; set; }

    [Parameter]
    public int? logRef { get; set; }

    [Parameter]
    public int? teklifRef { get; set; }

    [Parameter]
    public EventCallback OnVazgecClicked { get; set; }

    public bool IsUpdate { get; set; }

    TeklifDetayDto teklifDetay = new TeklifDetayDto();

    TeklifDto teklif = new TeklifDto();

    public List<DovizDto> DovizListesi { get; set; }

    private bool maliyetGorYonetici = false;
    private bool maliyetGorSatisci = false;

    private int _dovizTuru = -1;
    public int DovizTuruBilgisi
    {
        get
        {
            if (teklifDetay.Dovizref.HasValue == false)
                return -1;

            return teklifDetay.Dovizref.Value;
        }
        set
        {
            _dovizTuru = value;
            teklifDetay.Dovizref = _dovizTuru;

            if (teklifDetay.Dovizref == teklif.Dovizrefid)
                teklifDetay.Dovizkuru = teklif.Dovizkuruid;
            else
            if (teklifDetay.Dovizref == 160)
                teklifDetay.Dovizkuru = 1;
            else
                DovizKuruGetir().GetAwaiter();
        }
    }

    private string _DovizKuruState = "";
    private bool _TeklifDetayCekildi = false;
    private bool loadingCompleted = false;
    private bool _processing = false;

    private double? _pageMiktar = 1;
    public double? pageMiktar
    {
        get
        {
            _pageMiktar = teklifDetay.Miktar;
            return _pageMiktar;
        }
        set
        {
            _pageMiktar = value;
            teklifDetay.Miktar = value;

            CalculateTeklifDetay();
        }
    }

    private double? _pageIskYuz1 = 0;
    public double? pageIskYuz1
    {
        get
        {
            _pageIskYuz1 = teklifDetay.Iskyuz1;
            return _pageIskYuz1;
        }
        set
        {
            _pageIskYuz1 = value;
            teklifDetay.Iskyuz1 = value;

            CalculateTeklifDetay();
        }
    }

    private double? _pageIskYuz2 = 0;
    public double? pageIskYuz2
    {
        get
        {
            _pageIskYuz2 = teklifDetay.Iskyuz2;
            return _pageIskYuz2;
        }
        set
        {
            _pageIskYuz2 = value;
            teklifDetay.Iskyuz2 = value;

            CalculateTeklifDetay();
        }
    }

    private double? _pageIskYuz3 = 0;
    public double? pageIskYuz3
    {
        get
        {
            _pageIskYuz3 = teklifDetay.Iskyuz3;
            return _pageIskYuz3;
        }
        set
        {
            _pageIskYuz3 = value;
            teklifDetay.Iskyuz3 = value;

            CalculateTeklifDetay();
        }
    }

    private double? _maliyet1Top = 0;
    public double? Maliyet1Top
    {
        get
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Maliyet1.HasValue)
                _maliyet1Top = Math.Round(teklifDetay.Miktar.Value * teklifDetay.Maliyet1.Value, 2);
            else
                _maliyet1Top = 0;

            return _maliyet1Top;
        }
        set
        {
            _maliyet1Top = value;
        }
    }

    private double? _maliyet2Top = 0;
    public double? Maliyet2Top
    {
        get
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Maliyet2.HasValue)
                _maliyet2Top = Math.Round(teklifDetay.Miktar.Value * teklifDetay.Maliyet2.Value, 2);
            else
                _maliyet2Top = 0;

            return _maliyet2Top;
        }
        set
        {
            _maliyet2Top = value;
        }
    }

    private double? _maliyet1Topid = 0;
    public double? Maliyet1Topid
    {
        get
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Maliyet1id.HasValue)
                _maliyet1Topid = Math.Round(teklifDetay.Miktar.Value * teklifDetay.Maliyet1id.Value, 2);
            else
                _maliyet1Topid = 0;

            return _maliyet1Topid;
        }
        set
        {
            _maliyet1Topid = value;
        }
    }

    private double? _maliyet2Topid = 0;
    public double? Maliyet2Topid
    {
        get
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Maliyet2id.HasValue)
                _maliyet2Topid = Math.Round(teklifDetay.Miktar.Value * teklifDetay.Maliyet2id.Value, 2);
            else
                _maliyet2Topid = 0;

            return _maliyet2Topid;
        }
        set
        {
            _maliyet2Topid = value;
        }
    }

    private double? _birimfiyatnetid = 0;
    public double? BirimFiyatNetid
    {
        get
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Kdvmatrahid.HasValue)
                _birimfiyatnetid = Math.Round(teklifDetay.Kdvmatrahid.Value / teklifDetay.Miktar.Value, 2);
            else
                _birimfiyatnetid = 0;

            return _birimfiyatnetid;
        }
        set
        {
            _birimfiyatnetid = value;
        }
    }

    private double? _isktopid = 0;
    public double? IskTopid
    {
        get
        {
            _isktopid = Math.Round((teklifDetay.Isktut1id.HasValue ? teklifDetay.Isktut1id.Value : 0) + (teklifDetay.Isktut2id.HasValue ? teklifDetay.Isktut2id.Value : 0) + (teklifDetay.Isktut3id.HasValue ? teklifDetay.Isktut3id.Value : 0) + (teklifDetay.Isktut4id.HasValue ? teklifDetay.Isktut4id.Value : 0), 2);

            return _isktopid;
        }
        set
        {
            _isktopid = value;
        }
    }

    protected override Task OnParametersSetAsync()
    {
        IsUpdate = logRef.HasValue;
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        IsUpdate = logRef.HasValue;

        if (IsUpdate && !_TeklifDetayCekildi)
        {
            await GetTeklifDetay();
        }
        else
        {
            this.pageMiktar = 1;
            await GetTeklifDetaySiraNo();
        }

        await KullaniciYetkileriGetir();
        await DovizListesiGetir();
        await GetTeklif();
        loadingCompleted = true;
    }

    public async Task GetTeklifDetaySiraNo()
    {
        try
        {
            if (!string.IsNullOrEmpty(teklifDetay.Sipnosira))
                return;

            if (teklifRef == null)
                return;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);
            if (selectedFirmaDonem == null)
                throw new Exception("Firma dönem seçilmedi");

            var result = await httpClient.GetServiceResponseAsync<string>(UrlHelper.TeklifDetaySiraNo + "?teklifref=" + teklifRef + "&firmaId=" + selectedFirmaDonem.firma_no.Value);

            teklifDetay.Sipnosira = result;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
    }

    public async Task GetTeklifDetay()
    {
        try
        {

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);
            if (selectedFirmaDonem == null)
                throw new Exception("Firma dönem seçilmedi");

            teklifDetay = await httpClient.GetServiceResponseAsync<TeklifDetayDto>(UrlHelper.TeklifDetayGetir + "?logref=" + logRef + "&firmaId=" + selectedFirmaDonem.firma_no.Value);

            _TeklifDetayCekildi = true;

            teklifRef = teklifDetay.Teklifref.Value;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
    }

    public async Task LogRefUret()
    {
        var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);
        if (selectedFirmaDonem == null)
            throw new Exception("Firma dönem seçilmedi");


        var result2 = await httpClient.GetServiceResponseAsync<int>(UrlHelper.RefNoAl + "?tablename=teklifdetay&firmaId=" + selectedFirmaDonem.firma_no.Value);
        teklifDetay.Logref = result2;
    }

    public async Task DovizListesiGetir()
    {
        try
        {
            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            if (selectedFirmaDonem == null)
                throw new Exception("Firma Dönem Seçili değil");

            var result = await httpClient.GetServiceResponseAsync<List<DovizDto>>(UrlHelper.DovizListesi + "?logofirmno=" + selectedFirmaDonem.logo_firma.Value);
            if (result != null)
            {
                DovizListesi = result;
            }
        }
        catch (Exception)
        {
            throw;
        }
    }

    public async Task MalzemeListesiAc()
    {
        var opt = new ModalOptions();
        opt.ContentScrollable = true;

        var form = modal.Show<Pages.Malzeme.Malzeme_Sec_StokluFiyatli>("Malzeme Seç", options: opt);
        var result = await form.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                await MalzemeDonusum(result.Data);
            }
        }
    }

    public async Task MalzemeEkle()
    {
        var opt = new ModalOptions();
        opt.ContentScrollable = true;

        var parameters = new ModalParameters();
        parameters.Add("modalForm", 1);

        var form = modal.Show<Components.Malzeme.Malzeme_Ekle_Component>("Malzeme Ekle", parameters: parameters, options: opt);
        var result = await form.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                await MalzemeDonusum(result.Data);
            }
        }
    }


    private async Task MalzemeDonusum(object data)
    {
        var mkart = (VMalzemeKartDto)data;
        teklifDetay.LstokId = mkart.Logref;
        teklifDetay.Malzadi = mkart.Adi;
        teklifDetay.Malzkodu = mkart.Kodu;
        teklifDetay.Birimkodu = mkart.Birimkodu;
        teklifDetay.Unitsetllogref = mkart.Birimref;
        teklifDetay.Unitsetref = mkart.Birimsetiref;
        teklifDetay.Marka = mkart.Descr;
        teklifDetay.Mensei = mkart.Definition;
        teklifDetay.Ebat = mkart.Ebatt;
        teklifDetay.Kdvyuz = mkart.Kdvyuz;
        teklifDetay.Ozelkod5 = mkart.Ozelkod5;
        if (mkart.Kodu.StartsWith("UMOTA"))
        {
            teklifDetay.Fiyat = mkart.Satfiyat;
            switch (mkart.SatfiyatDov)
            {
                case "TL":
                    DovizTuruBilgisi = 160;
                    break;
                case "USD":
                    DovizTuruBilgisi = 1;
                    break;
                case "EUR":
                    DovizTuruBilgisi = 20;
                    break;
                case "GBP":
                    DovizTuruBilgisi = 17;
                    break;
                default:
                    DovizTuruBilgisi = 160;
                    break;
            }
            teklifDetay.Maliyet1 = mkart.Alfiyat;
            teklifDetay.Maliyet2 = mkart.Alfiyat;
        }
        else
        {
            await FiyatGetir();
            await MaliyetGetir();
        }

        if (teklifDetay.Miktar.HasValue)
            CalculateTeklifDetay();
    }

    public async Task ValidSubmit()
    {
        if (IsUpdate)
            await UpdateTeklifDetay();
        else
            await SaveTeklifDetay();
    }

    private async Task UpdateTeklifDetay()
    {
        try
        {
            TeklifDetayValidation();
            _processing = true;

            teklifDetay.Upddate = DateTime.Now;
            teklifDetay.Upduser = await LocalStorageService.GetItemAsync<string>(Consts.KullaniciKodu);
            teklifDetay.Status = 1;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            var request = new TeklifDetayRequestDto();
            request.TeklifDetay = teklifDetay;
            request.FirmaId = selectedFirmaDonem.firma_no.Value;

            var result = await httpClient.PostAsJsonAsync("/api/teklifdetay/update", request);

            var response = await result.Content.ReadFromJsonAsync<ServiceResponse<TeklifDetayDto>>();
            if (!response.Success)
                throw new Exception(response.Message);

            Snackbar.Add("Teklif güncellendi", severity: Severity.Success);

            navigation.NavigateTo("/stek_listef_detay/" + teklifDetay.Teklifref);

        }
        catch (ApiException exx)
        {
            Snackbar.Add(exx.Message, severity: Severity.Warning);
            return;
        }
        catch (ClientException e)
        {
            foreach (var item in e.ErrorList)
            {
                Snackbar.Add(item, severity: Severity.Warning);
            }
            return;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
        finally
        {
            _processing = false;
        }
    }

    private async Task SaveTeklifDetay()
    {
        try
        {
            TeklifDetayValidation();

            _processing = true;
            await LogRefUret();
            teklifDetay.Insdate = DateTime.Now;
            teklifDetay.Insuser = await LocalStorageService.GetItemAsync<string>(Consts.KullaniciKodu);
            teklifDetay.Teklifref = teklifRef;
            teklifDetay.Status = 0;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            var request = new TeklifDetayRequestDto();
            request.TeklifDetay = teklifDetay;
            request.FirmaId = selectedFirmaDonem.firma_no.Value;

            var result = await httpClient.PostAsJsonAsync("/api/teklifdetay/save", request);

            var response = await result.Content.ReadFromJsonAsync<ServiceResponse<TeklifDetayDto>>();
            if (!response.Success)
                throw new Exception(response.Message);

            Snackbar.Add("Teklif güncellendi", severity: Severity.Success);

            navigation.NavigateTo("/stek_listef_detay/" + teklifDetay.Teklifref);

        }
        catch (ClientException e)
        {
            foreach (var item in e.ErrorList)
            {
                Snackbar.Add(item, severity: Severity.Warning);
            }
            return;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Error);
        }
        finally
        {
            _processing = false;
        }
    }

    public Task Vazgec()
    {
        if (teklifRef != null)
        {
            navigation.NavigateTo("/stek_listef_detay/" + teklifRef);
        }

        if (teklifDetay != null && teklifDetay.Teklifref != null)
        {
            navigation.NavigateTo("/stek_listef_detay/" + teklifDetay.Teklifref);
        }

        return Task.CompletedTask;
    }

    public async Task FiyatGetir()
    {
        try
        {
            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            if (selectedFirmaDonem == null)
                throw new Exception("Firma Dönem Seçili değil");

            // if (selectedFirmaDonem.firma_no.Value.ToString() == Consts.MakpaFirmaNo || selectedFirmaDonem.firma_no.Value.ToString() == Consts.GASTROMOREFirmaNo)
            // {
            //     var ondegerFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.OndegerFirmaDonem);
            //     if (ondegerFirmaDonem != null)
            //         selectedFirmaDonem = ondegerFirmaDonem;
            // }

            var request = new MalzemeFiyatRequestDto();
            request.Tarih = DateTime.Now;
            request.MalzemeRef = teklifDetay.LstokId.Value;
            request.CariKodu = teklif.Carikodu;
            request.BirimKodu = teklifDetay.Birimkodu;
            request.DovizRef = teklifDetay.Dovizref.HasValue ? teklifDetay.Dovizref.Value : 160;
            request.LogoFirmaNo = selectedFirmaDonem.logo_firma.Value;

            var result = await httpClient.PostGetServiceResponseAsync<MalzemeFiyatDto, MalzemeFiyatRequestDto>(UrlHelper.MalzemeFiyatGetir, request);

            if (result != null)
            {
                teklifDetay.Fiyat = result.Fiyat;
                DovizTuruBilgisi = result.DovizRef;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
    }

    public async Task MaliyetGetir()
    {
        try
        {
            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            if (selectedFirmaDonem == null)
                throw new Exception("Firma Dönem Seçili değil");

            // if (selectedFirmaDonem.firma_no.Value.ToString() == Consts.MakpaFirmaNo || selectedFirmaDonem.firma_no.Value.ToString() == Consts.GASTROMOREFirmaNo)
            // {
            //     var ondegerFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.OndegerFirmaDonem);
            //     if (ondegerFirmaDonem != null)
            //         selectedFirmaDonem = ondegerFirmaDonem;
            // }

            var request = new MalzemeFiyatRequestDto();
            request.Tarih = DateTime.Now;
            request.MalzemeRef = teklifDetay.LstokId.Value;
            request.BirimKodu = teklifDetay.Birimkodu;
            request.DovizRef = teklifDetay.Dovizref.HasValue ? teklifDetay.Dovizref.Value : 160;
            request.LogoFirmaNo = selectedFirmaDonem.logo_firma.Value;

            var result = await httpClient.PostGetServiceResponseAsync<MalzemeFiyatDto, MalzemeFiyatRequestDto>(UrlHelper.MalzemeMaliyetGetir, request);

            if (result != null)
            {
                teklifDetay.Maliyet1 = result.Fiyat;
                teklifDetay.Maliyet2 = result.OzelFiyat;
            }

        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
    }

    private void CalculateTeklifDetay()
    {
        try
        {
            if (teklifDetay.Miktar.HasValue && teklifDetay.Fiyat.HasValue)
                teklifDetay.Tutar = Math.Round(teklifDetay.Miktar.Value * teklifDetay.Fiyat.Value, 2);
            else
                teklifDetay.Tutar = 0;

            if (teklifDetay.Iskyuz1.HasValue)
                teklifDetay.Isktut1 = Math.Round((teklifDetay.Tutar.Value * teklifDetay.Iskyuz1.Value) / 100, 2);
            else
                teklifDetay.Isktut1 = 0;

            if (teklifDetay.Iskyuz2.HasValue)
                teklifDetay.Isktut2 = Math.Round(((teklifDetay.Tutar.Value - teklifDetay.Isktut1.Value) * teklifDetay.Iskyuz2.Value) / 100, 2);
            else
                teklifDetay.Isktut2 = 0;

            if (teklifDetay.Iskyuz3.HasValue)
                teklifDetay.Isktut3 = Math.Round(((teklifDetay.Tutar.Value - teklifDetay.Isktut2.Value - teklifDetay.Isktut1.Value) * teklifDetay.Iskyuz3.Value) / 100, 2);
            else
                teklifDetay.Isktut3 = 0;

            if (teklifDetay.Iskyuz4.HasValue)
                teklifDetay.Isktut4 = Math.Round(((teklifDetay.Tutar.Value - teklifDetay.Isktut2.Value - teklifDetay.Isktut1.Value - teklifDetay.Isktut3.Value) * teklifDetay.Iskyuz4.Value) / 100, 2);
            else
                teklifDetay.Isktut4 = 0;

            teklifDetay.Kdvmatrah = teklifDetay.Tutar.Value - teklifDetay.Isktut1.Value - teklifDetay.Isktut2.Value - teklifDetay.Isktut3.Value - teklifDetay.Isktut4.Value;
            teklifDetay.Kdvtut = Math.Round((teklifDetay.Kdvmatrah.Value * (teklifDetay.Kdvyuz.HasValue ? teklifDetay.Kdvyuz.Value : 0)) / 100, 2);
            teklifDetay.Nettutar = teklifDetay.Kdvmatrah.Value + teklifDetay.Kdvtut.Value;

            if (teklifDetay.Dovizref == 160)
            {
                teklifDetay.Fiyattl = teklifDetay.Fiyat;
                teklifDetay.Tutartl = teklifDetay.Tutar.Value;
                teklifDetay.Isktut1tl = teklifDetay.Isktut1.Value;
                teklifDetay.Isktut2tl = teklifDetay.Isktut2.Value;
                teklifDetay.Isktut3tl = teklifDetay.Isktut3.Value;
                teklifDetay.Isktut4tl = teklifDetay.Isktut4.Value;
                teklifDetay.Kdvmatrahtl = teklifDetay.Kdvmatrah.Value;
                teklifDetay.Kdvtuttl = teklifDetay.Kdvtut.Value;
                teklifDetay.Nettutartl = teklifDetay.Nettutar.Value;
            }
            else
            if (teklifDetay.Dovizkuru.HasValue)
            {
                teklifDetay.Fiyattl = Math.Round(teklifDetay.Fiyat.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Tutartl = Math.Round(teklifDetay.Tutar.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Isktut1tl = Math.Round(teklifDetay.Isktut1.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Isktut2tl = Math.Round(teklifDetay.Isktut2.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Isktut3tl = Math.Round(teklifDetay.Isktut3.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Isktut4tl = Math.Round(teklifDetay.Isktut4.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Kdvmatrahtl = Math.Round(teklifDetay.Kdvmatrah.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Kdvtuttl = Math.Round(teklifDetay.Kdvtut.Value * teklifDetay.Dovizkuru.Value, 2);
                teklifDetay.Nettutartl = Math.Round(teklifDetay.Nettutar.Value * teklifDetay.Dovizkuru.Value, 2);
            }
            else
            {
                teklifDetay.Fiyattl = 0;
                teklifDetay.Tutartl = 0;
                teklifDetay.Isktut1tl = 0;
                teklifDetay.Isktut2tl = 0;
                teklifDetay.Isktut3tl = 0;
                teklifDetay.Isktut4tl = 0;
                teklifDetay.Kdvmatrahtl = 0;
                teklifDetay.Kdvtuttl = 0;
                teklifDetay.Nettutartl = 0;
            }

            if (teklifDetay.Dovizref == teklif.Dovizrefid)
            {
                teklifDetay.Tutarid = teklifDetay.Tutar.Value;
                teklifDetay.Isktut1id = teklifDetay.Isktut1.Value;
                teklifDetay.Isktut2id = teklifDetay.Isktut2.Value;
                teklifDetay.Isktut3id = teklifDetay.Isktut3.Value;
                teklifDetay.Isktut4id = teklifDetay.Isktut4.Value;
                teklifDetay.Kdvmatrahid = teklifDetay.Kdvmatrah.Value;
                teklifDetay.Kdvtutid = teklifDetay.Kdvtut.Value;
                teklifDetay.Nettutarid = teklifDetay.Nettutar.Value;
            }
            else
            if (teklif.Dovizkuruid.HasValue)
            {
                teklifDetay.Tutarid = Math.Round(teklifDetay.Tutartl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Isktut1id = Math.Round(teklifDetay.Isktut1tl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Isktut2id = Math.Round(teklifDetay.Isktut2tl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Isktut3id = Math.Round(teklifDetay.Isktut3tl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Isktut4id = Math.Round(teklifDetay.Isktut4tl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Kdvmatrahid = Math.Round(teklifDetay.Kdvmatrahtl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Kdvtutid = Math.Round(teklifDetay.Kdvtuttl.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Nettutarid = Math.Round(teklifDetay.Nettutartl.Value / teklif.Dovizkuruid.Value, 2);
            }
            else
            {
                teklifDetay.Tutarid = 0;
                teklifDetay.Isktut1id = 0;
                teklifDetay.Isktut2id = 0;
                teklifDetay.Isktut3id = 0;
                teklifDetay.Isktut4id = 0;
                teklifDetay.Kdvmatrahid = 0;
                teklifDetay.Kdvtutid = 0;
                teklifDetay.Nettutarid = 0;
            }

            if (teklifDetay.Dovizref == teklif.Dovizref)
            {
                teklifDetay.Tutarrd = teklifDetay.Tutar.Value;
                teklifDetay.Isktut1rd = teklifDetay.Isktut1.Value;
                teklifDetay.Isktut2rd = teklifDetay.Isktut2.Value;
                teklifDetay.Isktut3rd = teklifDetay.Isktut3.Value;
                teklifDetay.Isktut4rd = teklifDetay.Isktut4.Value;
                teklifDetay.Kdvmatrahrd = teklifDetay.Kdvmatrah.Value;
                teklifDetay.Kdvtutrd = teklifDetay.Kdvtut.Value;
                teklifDetay.Nettutarrd = teklifDetay.Nettutar.Value;
            }
            else
            if (teklif.Dovizkuru.HasValue)
            {
                teklifDetay.Tutarrd = Math.Round(teklifDetay.Tutartl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Isktut1rd = Math.Round(teklifDetay.Isktut1tl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Isktut2rd = Math.Round(teklifDetay.Isktut2tl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Isktut3rd = Math.Round(teklifDetay.Isktut3tl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Isktut4rd = Math.Round(teklifDetay.Isktut4tl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Kdvmatrahrd = Math.Round(teklifDetay.Kdvmatrahtl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Kdvtutrd = Math.Round(teklifDetay.Kdvtuttl.Value / teklif.Dovizkuru.Value, 2);
                teklifDetay.Nettutarrd = Math.Round(teklifDetay.Nettutartl.Value / teklif.Dovizkuru.Value, 2);
            }
            else
            {
                teklifDetay.Tutarrd = 0;
                teklifDetay.Isktut1rd = 0;
                teklifDetay.Isktut2rd = 0;
                teklifDetay.Isktut3rd = 0;
                teklifDetay.Isktut4rd = 0;
                teklifDetay.Kdvmatrahrd = 0;
                teklifDetay.Kdvtutrd = 0;
                teklifDetay.Nettutarrd = 0;
            }

            if (teklifDetay.Dovizref == teklif.Dovizrefid)
            {
                teklifDetay.Maliyet1id = teklifDetay.Maliyet1.Value;
                teklifDetay.Maliyet2id = teklifDetay.Maliyet2.Value;
            }
            else
            if (teklif.Dovizkuruid.HasValue)
            {
                teklifDetay.Maliyet1id = Math.Round(teklifDetay.Maliyet1.Value * teklifDetay.Dovizkuru.Value / teklif.Dovizkuruid.Value, 2);
                teklifDetay.Maliyet2id = Math.Round(teklifDetay.Maliyet2.Value * teklifDetay.Dovizkuru.Value / teklif.Dovizkuruid.Value, 2);
            }
            else
            {
                teklifDetay.Maliyet1id = 0;
                teklifDetay.Maliyet2id = 0;
            }
        }
        catch (Exception)
        {

        }
    }

    public async Task GetTeklif()
    {
        try
        {
            if (teklifRef.HasValue == false)
                return;

            var selectedFirmaDonem = await LocalStorageService.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            if (selectedFirmaDonem == null)
                throw new Exception("Firma Dönem Seçili değil");

            var result = await httpClient.GetServiceResponseAsync<TeklifDto>(UrlHelper.TeklifGetir + "?logref=" + teklifRef.Value + "&firmaId=" + selectedFirmaDonem.firma_no);
            if (result != null)
            {
                teklif = result;

                teklifDetay.Iskyuz4 = teklif.Gniskoran;

                if (!IsUpdate)
                {
                    DovizTuruBilgisi = teklif.Dovizrefid.Value;
                }

            }
        }
        catch (Exception ex)
        {
            await ModalManager.ShowMessageAsync("Hata", ex.Message);
        }
    }

    public void TeklifDetayValidation()
    {
        var err = new List<string>();

        if (teklifDetay.LstokId == null)
            err.Add("Malzeme boş geçilemez");

        if (teklifDetay.Miktar == null || teklifDetay.Miktar <= 0)
            err.Add("Miktar sıfırdan büyük olmalı");

        if (err.Count > 0)
        {
            var ex = new ClientException("Teklif Detay Hatası");
            ex.ErrorList = err;

            throw ex;
        }
    }

    public async Task DovizKuruGetir()
    {
        try
        {
            if (teklifDetay.Dovizref <= 0)
            {
                throw new Exception("Döviz tipi seçmelisiniz");
            }

            _DovizKuruState = "Çekiliyor...";
            teklifDetay.Dovizkuru = await yetkiHelper.DovizKuruAl(teklifDetay.Dovizref.Value, teklif.Tarih.Value);
            _DovizKuruState = "Güncel";
            this.StateHasChanged();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
    }

    public async Task KullaniciYetkileriGetir()
    {
        try
        {
            var kullanicikodu = await LocalStorageService.GetItemAsync<string>(Consts.KullaniciKodu);

            var result = await httpClient.GetServiceResponseAsync<int>(UrlHelper.GetKullaniciYetkisi + "?kullanicikodu=" + kullanicikodu + "&yetkikodu=" + KullaniciYetkiKodlari.TeklifteMaliyet1GorebilsinYoNETiCi);

            maliyetGorYonetici = result == 1;

            result = await httpClient.GetServiceResponseAsync<int>(UrlHelper.GetKullaniciYetkisi + "?kullanicikodu=" + kullanicikodu + "&yetkikodu=" + KullaniciYetkiKodlari.TeklifteMaliyet2GorebilsinPersonel);

            maliyetGorSatisci = result == 1;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, severity: Severity.Warning);
        }
    }


}
